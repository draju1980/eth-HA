---
- name: Copy Lighthouse config file to the localhost
  ansible.builtin.template:
    src: ../templates/lighthouse_config.yaml.j2
    dest: "{{ app_data_path }}/{{ lighthouse_node_name }}/config/config.yaml"
  tags: lighthous_config
  become: true

- name: Start Lighthouse node container
  ansible.builtin.docker_container:
    name: "{{ lighthouse_node_name }}"
    image: "{{ lighthouse_docker_image }}"
    command: lighthouse bn --network sepolia --execution-endpoint http://{{ geth_node_name }}:8551 --execution-jwt /root/.lighthouse/config/jwt.hex --checkpoint-sync-url https://sepolia.beaconstate.info --http --http-port 5052 --http-address 0.0.0.0 --disable-deposit-contract-sync --disable-upnp --datadir /root/.lighthouse/data
    # Staking
    # command: lighthouse bn --network sepolia --execution-endpoint http://{{ geth_node_name }}:8551 --execution-jwt /root/.lighthouse/config/jwt.hex --checkpoint-sync-url https://sepolia.beaconstate.info --http --http-port 5052 --http-address 0.0.0.0 --http-allow-origin="*"
    # Non-staking
    # command: lighthouse bn --network sepolia --execution-endpoint http://{{ geth_node_name }}:8551 --execution-jwt /root/.lighthouse/config/jwt.hex --checkpoint-sync-url https://sepolia.beaconstate.info --disable-deposit-contract-sync --http
    # config: /root/.lighthouse/config/config.yaml
    # command: lighthouse --config=/root/.lighthouse/config/config.yaml
    state: started
    recreate: yes
    restart_policy: always
    networks_cli_compatible: yes
    networks:
      - name: "{{ docker_network_name }}"
    ports:
      - "127.0.0.1:{{ lighthouse_rpc_port }}:{{ lighthouse_rpc_port }}"
      - "0.0.0.0:{{ lighthouse_p2p_port }}:{{ lighthouse_p2p_port }}"
      - "0.0.0.0:{{ lighthouse_p2p_port }}:{{ lighthouse_p2p_port }}/udp"
    volumes:
      - "{{ app_data_path }}/{{ lighthouse_node_name }}/data:/root/.lighthouse/data"
      - "{{ app_data_path }}/{{ lighthouse_node_name }}/config:/root/.lighthouse/config"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    
- name: Check if password file exists
  ansible.builtin.stat:
    path: "{{ app_data_path }}/{{ lighthouse_node_name }}/config/password.txt"
  register: lighthouse_password_file

- name: Copy random genrated password to password.txt file in lighthouse config directory
  when: lighthouse_password_file.stat.exists == False
  ansible.builtin.template:
      src: "../templates/password.txt.j2"
      dest: "{{ app_data_path }}/{{ lighthouse_node_name }}/config/password.pass"
